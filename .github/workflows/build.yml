name: Build
on:
  workflow_dispatch:
  push:
    branches: 
      - main
    paths:
      - Dockerfile
      - matrix.nu

env:
  DOCKER_BUILDKIT: 1

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Nushell
        uses: hustcer/setup-nu@v3.8

      - name: Generate Matrix
        id: generate-matrix
        run: |
          MATRIX=$(nu matrix.nu)
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$MATRIX" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build:
      name: "${{ matrix.minorShopwareVersion }} (${{ matrix.shopwareVersion }})"
      runs-on: ubuntu-latest
      needs: [generate-matrix]
      strategy: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
      steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Login into Github Docker Registery
          run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        - name: Install and configure Namespace CLI
          uses: namespacelabs/nscloud-setup@v0

        - name: Configure Namespace powered Buildx
          uses: namespacelabs/nscloud-setup-buildx-action@v0

        - uses: docker/build-push-action@v5
          with:
            tags: ghcr.io/friendsofshopware/shopware-demo-environment:${{ matrix.minorShopwareVersion }}
            platforms: linux/amd64,linux/arm64
            build-args: |
              PHP_VERSION=${{ matrix.phpVersion }}
              SHOPWARE_VERSION=${{ matrix.shopwareVersion }}
            push: true
            provenance: false
